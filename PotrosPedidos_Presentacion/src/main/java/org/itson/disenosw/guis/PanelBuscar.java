package org.itson.disenosw.guis;

import DAOs.ProductoDAO;
import Metodos.BusquedaDinamica;
import static com.mysql.cj.conf.PropertyKey.logger;
import control.ControlProductos;
import dominio.ProductoCafeteria;
import dtos.ProductoCafeteriaDTO;
import excepciones.PersistenciaException;
import excepciones.PersitenciaException;
import interfaces.IBusqueda;
import interfaces.IControlProductos;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Roberto García
 */
public final class PanelBuscar extends javax.swing.JPanel {

    private FramePrincipal framePrincipal;
    private List<ProductoCafeteriaDTO> productos;
    private IControlProductos controlProductos;
    private PanelMenu menu;

    /**
     * Constructor de la clase PanelBuscar.
     *
     * @param framePrincipal La framePrincipal principal de la aplicación.
     */
    public PanelBuscar(FramePrincipal framePrincipal) {
        try {
            this.framePrincipal = framePrincipal;
            initComponents();
            productos = new ArrayList<>();
            controlProductos = new ControlProductos();
            this.menu = new PanelMenu(framePrincipal);
            menu.crearMenu();

            Buscador.getDocument().addDocumentListener(new DocumentListener() {
                @Override
                public void insertUpdate(DocumentEvent e) {
                    try {
                        buscarProductosSimilares(Buscador.getText());
                    } catch (PersitenciaException ex) {
                        Logger.getLogger(PanelBuscar.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                @Override
                public void removeUpdate(DocumentEvent e) {
                    try {
                        buscarProductosSimilares(Buscador.getText());
                    } catch (PersitenciaException ex) {
                        Logger.getLogger(PanelBuscar.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                @Override
                public void changedUpdate(DocumentEvent e) {
                    try {
                        buscarProductosSimilares(Buscador.getText());
                    } catch (PersitenciaException ex) {
                        Logger.getLogger(PanelBuscar.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
        } catch (PersitenciaException ex) {
            Logger.getLogger(PanelBuscar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public ProductoCafeteriaDTO convertirDAOenDTO(ProductoCafeteria productoCafeteria) {
        ProductoCafeteriaDTO productoCafeteriaDTO = new ProductoCafeteriaDTO();

        productoCafeteriaDTO.setPrecio(productoCafeteria.getPrecio());
        productoCafeteriaDTO.setNombre(productoCafeteria.getNombre());
        productoCafeteriaDTO.setDescripcion(productoCafeteria.getDescripcion());
        productoCafeteriaDTO.setCantidadDisponible(productoCafeteria.getCantidadDisponible());
        productoCafeteriaDTO.setDireccionImagen(productoCafeteria.getDireccionImagen());
        productoCafeteriaDTO.setIdProductoCafeteria(productoCafeteria.getId());
        return productoCafeteriaDTO;
    }

    private void buscarProductosSimilares(String textoBusqueda) throws PersitenciaException {
        if (textoBusqueda.isEmpty()) {
            // Si el texto de búsqueda está vacío, mostrar todos los productos
            List<ProductoCafeteria> productosCafeteria = controlProductos.obtenerTodosLosProductos();
            productos.clear();
            for (ProductoCafeteria producto : productosCafeteria) {
                productos.add(convertirDAOenDTO(producto));
            }
        } else {
            // Aplicar filtro de búsqueda
            IBusqueda busqueda = new BusquedaDinamica();
            productos = busqueda.consultarProductos(textoBusqueda);
        }
        panelTop.removeAll();
        panelTop.revalidate();
        panelTop.repaint();
        // Volver a crear el menú con los productos encontrados
        menu.crearMenu();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCarrito = new javax.swing.JButton();
        btnUsuario = new javax.swing.JButton();
        Buscador = new javax.swing.JTextField();
        panelTop = new javax.swing.JPanel();
        btnRegresar = new javax.swing.JButton();
        lblBuscar = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(400, 800));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCarrito.setBorder(null);
        btnCarrito.setContentAreaFilled(false);
        btnCarrito.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarritoActionPerformed(evt);
            }
        });
        add(btnCarrito, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 15, 50, 50));

        btnUsuario.setBorder(null);
        btnUsuario.setContentAreaFilled(false);
        btnUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuarioActionPerformed(evt);
            }
        });
        add(btnUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 15, 50, 50));

        Buscador.setBackground(new java.awt.Color(250, 250, 250));
        Buscador.setForeground(new java.awt.Color(0, 0, 0));
        Buscador.setBorder(null);
        Buscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscadorActionPerformed(evt);
            }
        });
        Buscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BuscadorKeyPressed(evt);
            }
        });
        add(Buscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 123, 276, 31));

        panelTop.setOpaque(false);
        add(panelTop, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 380, 530));

        btnRegresar.setBorder(null);
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 702, 50, 50));

        lblBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pa.png"))); // NOI18N
        add(lblBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarritoActionPerformed

        framePrincipal.setIdProducto(1L);

        framePrincipal.cambiarVistaCarrito();
    }//GEN-LAST:event_btnCarritoActionPerformed

    private void btnUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUsuarioActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        framePrincipal.cambiarVistaMenu();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void BuscadorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BuscadorKeyPressed
        if (evt.getKeyCode() != KeyEvent.VK_ENTER) {
            try {

                buscarProductosSimilares(Buscador.getText());
            } catch (PersitenciaException ex) {
                Logger.getLogger(PanelBuscar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_BuscadorKeyPressed

    private void BuscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BuscadorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Buscador;
    private javax.swing.JButton btnCarrito;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnUsuario;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JPanel panelTop;
    // End of variables declaration//GEN-END:variables

}
